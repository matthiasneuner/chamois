name: Documentation

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ next ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: moose
          channels: conda-forge,https://conda.software.inl.gov/public
          mamba-version: "*"

      - name: Install dependencies
        shell: bash -l {0}
        run: |
          mamba install moose-dev
          mamba install gfortran_linux-64
          conda list | grep moose
          git clone https://gitlab.com/libeigen/eigen.git
          cd eigen 
          mkdir build
          cd build 
          cmake -DBUILD_TESTING=OFF  -DINCLUDE_INSTALL_DIR=$(python -c "import sys; print(sys.prefix)")/include -DCMAKE_INSTALL_PREFIX=$(python -c "import sys; print(sys.prefix)") ..
          make install
          cd ../..
          #
          git clone https://github.com/autodiff/autodiff.git
          cd autodiff
          mkdir build
          cd build
          cmake -DAUTODIFF_BUILD_TESTS=OFF -DAUTODIFF_BUILD_PYTHON=OFF -DAUTODIFF_BUILD_EXAMPLES=OFF -DAUTODIFF_BUILD_DOCS=OFF -DCMAKE_INSTALL_PREFIX=$(python -c "import sys; print(sys.prefix)") ..
          make install
          cd ../..
          git clone https://github.com/romeric/Fastor.git
          cd Fastor
          cmake  -DCMAKE_INSTALL_PREFIX=$(python -c "import sys; print(sys.prefix)") -DBUILD_TESTING=OFF .
          make install
          cd ..
          git clone https://github.com/idaholab/moose.git
      - name: Install Marmot
        shell: bash -l {0}
        run: |
          git clone https://chamois:${{secrets.MARMOT_READ_TOKEN}}@git.uibk.ac.at/bft/afbDevelopers/Marmot.git
          cd Marmot
          cd modules
          cd core
          rm -rf MarmotMechanicsCore
          git clone https://chamois:${{secrets.MarmotMechanicsCore_READ_TOKEN}}@git.uibk.ac.at/bft/afbDevelopers/MarmotMechanicsCore.git
          rm -rf MarmotMathCore
          git clone https://chamois:${{secrets.MarmotMathCore_READ_TOKEN}}@git.uibk.ac.at/bft/afbDevelopers/MarmotMathCore.git
          git clone https://chamois:${{secrets.MarmotMicromorphicCore_READ_TOKEN}}@git.uibk.ac.at/c8441141/MarmotMicromorphicCore.git
          git clone https://chamois:${{secrets.MarmotCosseratCore_READ_TOKEN}}@git.uibk.ac.at/c8441141/MarmotCosseratCore.git
          cd ../..
          #
          mkdir build
          cd build
          cmake -DCMAKE_INSTALL_PREFIX=$(python -c "import sys; print(sys.prefix)")  ..
          make install
          # 
          cd ../../
      - name: Compile chamois (without coverage)
        #if: ${{ github.event_name == 'pull_request' }}
        shell: bash -l {0}
        run: |
          make -j 2
      - name: Build documentation
        shell: bash -l {0}
        run: |
          mkdir gh-pages
          cd doc
          #./moosedocs.py check
          ./moosedocs.py build -l CRITICAL --destination ../gh-pages/
      - name: Deploy to GitHub Pages
        if: ${{ github.event_name == 'push' }}
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: gh-pages
          single-commit: true
